using Newtonsoft.Json;

namespace Fido.Uaf.Shared.Messages
{
    /// <summary>
    /// Contains the authenticator's response to a RegistrationRequest message.
    /// </summary>
    public class AuthenticatorRegistrationAssertion
    {
        /// <summary>
        /// The name of the Assertion Scheme used to encode the `assertion.
        /// See [UAF Supported Assertion Schemes](https://fidoalliance.org/specs/fido-uaf-v1.0-ps-20141208/fido-uaf-protocol-v1.0-ps-20141208.html#uaf-supported-assertion-schemes) for details.
        /// </summary>
        /// <note>
        /// This AssertionScheme is not part of a signed object and hence considered the suspected AssertionScheme.
        /// </note>
        [JsonProperty("assertionScheme", Required = Required.Always)]
        public string AssertionScheme { get; set; }

        /// <summary>
        /// `base64url(byte[1..4096])` Contains the `TAG_UAFV1_REG_ASSERTION`object
        /// containing the assertion scheme specific KeyRegistrationData (KRD) object
        /// which in turn contains the newly generated `UAuth.pub` and is signed
        /// by the Attestation Private Key.
        /// 
        /// This assertion MUST be generated by the authenticator and it MUST be used
        /// only in this Registration operation.The format of this assertion can vary
        /// from one assertion scheme to another (e.g. for "UAFV1TLV" assertion scheme
        /// it MUST be `TAG_UAFV1_KRD`).
        /// </summary>
        [JsonProperty("assertion", Required = Required.Always)]
        public string Assertion { get; set; }

        /// <summary>
        /// Supported transaction PNG type [UAFAuthnrMetadata](https://fidoalliance.org/specs/fido-uaf-v1.0-ps-20141208/fido-uaf-authnr-metadata-v1.0-ps-20141208.html).
        /// For the definition of the DisplayPngCharacteristicsDescriptor structure See [UAFAuthnrMetadata](https://fidoalliance.org/specs/fido-uaf-v1.0-ps-20141208/fido-uaf-authnr-metadata-v1.0-ps-20141208.html).
        /// </summary>
        [JsonProperty("tcDisplayPNGCharacteristics")]
        public DisplayPngCharacteristicsDescriptor[] TcDisplayPngCharacteristics { get; set; }

        /// <summary>
        /// Contains Extensions prepared by the authenticator.
        /// </summary>
        [JsonProperty("exts")]
        public Extension[] Exts { get; set; }
    }
}
